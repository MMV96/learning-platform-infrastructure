version: '3.8'
services:

  # ===== MICROSERVICES LAYER =====
  content-processor:
    build: 
      context: ${MICROSERVICES_PATH}/content-processor
      dockerfile: Dockerfile
    container_name: learning-content-processor
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    volumes:
      - ${MICROSERVICES_PATH}/content-processor/src:/app/src
      - ${MICROSERVICES_PATH}/content-processor/.env:/app/.env
      - ${MICROSERVICES_PATH}/content-processor/uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - learning-network
    restart: unless-stopped

  quiz-generator:
    build: 
      context: ${MICROSERVICES_PATH}/quiz-generator
      dockerfile: Dockerfile
    container_name: learning-quiz-generator
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    volumes:
      - ${MICROSERVICES_PATH}/quiz-generator/src:/app/src
      - ${MICROSERVICES_PATH}/quiz-generator/.env:/app/.env
    depends_on:
      - mongodb
      - redis
    networks:
      - learning-network
    restart: unless-stopped

  quiz-engine:
    build: 
      context: ${MICROSERVICES_PATH}/quiz-engine
      dockerfile: Dockerfile
    container_name: learning-quiz-engine
    environment:
      - ENVIRONMENT=${ENVIRONMENT}
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
      - QUIZ_GENERATOR_URL=http://quiz-generator:80
    volumes:
      - ${MICROSERVICES_PATH}/quiz-engine/src:/app/src
      - ${MICROSERVICES_PATH}/quiz-engine/.env:/app/.env
    depends_on:
      - mongodb
      - redis
      - quiz-generator
    networks:
      - learning-network
    restart: unless-stopped

  # ===== FRONTEND LAYER =====
  frontend:
    build: 
      context: ${MICROSERVICES_PATH}/frontend
      dockerfile: Dockerfile
    container_name: learning-platform-frontend
    environment:
      - NODE_ENV=${ENVIRONMENT}
    volumes:
      - ${MICROSERVICES_PATH}/frontend/src:/app/src
      - ${MICROSERVICES_PATH}/frontend/angular.json:/app/angular.json
      - ${MICROSERVICES_PATH}/frontend/package.json:/app/package.json
      - ${MICROSERVICES_PATH}/frontend/tsconfig.json:/app/tsconfig.json
      - ${MICROSERVICES_PATH}/frontend/tsconfig.app.json:/app/tsconfig.app.json
    networks:
      - learning-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== REVERSE PROXY LAYER =====
  nginx:
    image: nginx:1.25-alpine
    container_name: learning-nginx
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    environment:
      - NGINX_HTTP_PORT=${NGINX_HTTP_PORT:-80}
      - NGINX_HTTPS_PORT=${NGINX_HTTPS_PORT:-443}
    depends_on:
      - content-processor
      - quiz-generator
      - quiz-engine
      - frontend
    networks:
      - learning-network
    restart: unless-stopped
    command: ["nginx", "-g", "daemon off;"]
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
